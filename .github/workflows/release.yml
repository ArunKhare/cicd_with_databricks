name: release

on:
  push:
    tags:
      - 'v*' # only release a versioned tag, such as v.X.Y.Z

jobs:
  deploy-production-dlt-meta-jobs:
    runs-on: ubuntu-latest
    env:
      DATABRICKS_HOST: ${{ secrets['DATABRICKS_HOST_PRD'] }}
      DATABRICKS_TOKEN: ${{ secrets['DATABRICKS_TOKEN_PRD'] }}
      ENV: prd
      INTEGRATION_TEST: "NO"
      REPO_PATH: "/Repos/shivam.panicker@databricks.com/dlt-meta"

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name : Installing Dependancies AND Additional Environment Variables
        run: |
          pip install dbx --upgrade
#          python utils/shared/yaml2ghenv.py pipelines/conf/env.yaml

     - name: Update Repo
       run: |
         databricks repos update --path ${{ env.REPO_PATH }} --branch main

# Test comment

      - name: Deploy/Run Setup DLT Metapipeline Job
        run: |
          dbx deploy \
            --deployment-file=pipelines/conf/dbx/deployment-merged.yaml \
            --environment=prd \
            --job=setup_dlt_meta_pipeline_spec \
            --no-rebuild

           dbx launch --environment=prd --trace --job=setup_dlt_meta_pipeline_spec

      - name: Create DLT Pipelines and Deploy/Run DLT Meta Job
        run: |
          python3 utils/job-deploy/dlt-meta-job-create.py pipelines/conf/dlt-meta/onboarding.json
          dbx deploy \
            --deployment-file=tmp/updated_deployment.yaml \
            --environment=prd \
            --job=dlt-meta-cdc-framework \
            --no-rebuild

          dbx launch --environment=prd --trace --job=dlt-meta-cdc-framework

  create-release:
    needs:
      -   deploy-production-dlt-meta-jobs
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2


      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release for version ${{ github.ref }}. Please refer to CHANGELOG.md for detailed information.
          draft: false
          prerelease: false